{
  "language": "c",
  "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <time.h>\n#include <math.h>\n\nint main() {\n    printf(\"=== C Program Test ===\\n\");\n    \n    // Basic operations\n    int numbers[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n    int n = sizeof(numbers) / sizeof(numbers[0]);\n    int sum = 0;\n    int product = 1;\n    \n    printf(\"Numbers: \");\n    for (int i = 0; i < n; i++) {\n        printf(\"%d \", numbers[i]);\n        sum += numbers[i];\n        product *= numbers[i];\n    }\n    printf(\"\\n\");\n    \n    printf(\"Sum: %d\\n\", sum);\n    printf(\"Product: %d\\n\", product);\n    \n    // String operations\n    char message[] = \"Hello from C!\";\n    printf(\"Message: %s\\n\", message);\n    printf(\"Length: %lu\\n\", strlen(message));\n    \n    // Convert to uppercase\n    for (int i = 0; message[i]; i++) {\n        if (message[i] >= 'a' && message[i] <= 'z') {\n            message[i] = message[i] - 32;\n        }\n    }\n    printf(\"Uppercase: %s\\n\", message);\n    \n    // Time operations\n    time_t now;\n    time(&now);\n    printf(\"Current time: %s\", ctime(&now));\n    \n    // Math operations\n    printf(\"π ≈ %.6f\\n\", M_PI);\n    printf(\"e ≈ %.6f\\n\", M_E);\n    printf(\"Square root of 16: %.2f\\n\", sqrt(16));\n    printf(\"2^10 = %.0f\\n\", pow(2, 10));\n    \n    // Array operations\n    int sorted_numbers[10];\n    memcpy(sorted_numbers, numbers, sizeof(numbers));\n    \n    // Simple bubble sort\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = 0; j < n - i - 1; j++) {\n            if (sorted_numbers[j] > sorted_numbers[j + 1]) {\n                int temp = sorted_numbers[j];\n                sorted_numbers[j] = sorted_numbers[j + 1];\n                sorted_numbers[j + 1] = temp;\n            }\n        }\n    }\n    \n    printf(\"Sorted: \");\n    for (int i = 0; i < n; i++) {\n        printf(\"%d \", sorted_numbers[i]);\n    }\n    printf(\"\\n\");\n    \n    // Find max and min\n    int max = numbers[0];\n    int min = numbers[0];\n    for (int i = 1; i < n; i++) {\n        if (numbers[i] > max) max = numbers[i];\n        if (numbers[i] < min) min = numbers[i];\n    }\n    \n    printf(\"Max: %d\\n\", max);\n    printf(\"Min: %d\\n\", min);\n    \n    printf(\"=== Test completed successfully! ===\\n\");\n    return 0;\n}"
} 