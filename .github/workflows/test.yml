name: Test and Build

on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Check formatting
        run: cargo fmt -- --check

  build-docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: isobox:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          # Test basic functionality
          echo "Testing isobox Docker image..."

          # Start the container
          docker run -d --name isobox-test \
            -p 8000:8000 \
            -v /var/run/docker.sock:/var/run/docker.sock \
            isobox:test

          # Wait for the service to start
          sleep 10

          # Test health endpoint
          curl -f http://localhost:8000/health || exit 1

          # Test Go code execution
          curl -X POST http://localhost:8000/execute \
            -H "Content-Type: application/json" \
            -d '{"language": "go", "code": "package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello from isobox!\")\n}"}' \
            || exit 1

          # Clean up
          docker stop isobox-test
          docker rm isobox-test

          echo "âœ… All tests passed!"
